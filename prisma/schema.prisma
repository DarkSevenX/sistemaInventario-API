// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  username    String   @unique()
  password    String
  products    Product[]
  ventas      Venta[]
  categorias  Category[]
  providers   Provider[]
}

model Product {
  id         Int      @id @default(autoincrement())
  name       String
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId Int
  provider   Provider @relation(fields: [providerId], references: [id], onDelete: Cascade)
  providerId Int
  price      Float
  stock      Int
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  ventas     Venta[]  // Agregamos una referencia aqu√≠ a las ventas
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  products    Product[]
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
}

model Provider {
  id        Int      @id @default(autoincrement())
  name      String
  contact   BigInt
  email     String   @unique
  products  Product[]
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
}

model Venta {
  id             Int       @id @default(autoincrement())
  product        Product   @relation(fields: [productId], references: [id])
  productId      Int
  quantity       Int
  totalPrice     Float
  date           DateTime  @default(now())
  remainingStock Int
  user           User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         Int
}

